<template>
  <DarkModeSwitcher />
  <div class="container sm:px-10">
    <div class="block xl:grid grid-cols-2 gap-4">
      <!-- BEGIN: Login Info -->
      <div class="hidden xl:flex flex-col min-h-screen">
        <a
          href="javascript:;"
          class="-intro-x flex items-center pt-5"
          v-on:click="mainfn"
        >
          <img
            alt="Midone Tailwind HTML Admin Template"
            class="w-6"
            :src="require(`@/assets/images/logo.svg`)"
          />
          <span class="text-white text-lg ml-3">
            Vue<span class="font-medium">log</span>
          </span>
        </a>
        <div class="my-auto">
          <img
            alt="Midone Tailwind HTML Admin Template"
            class="-intro-x w-1/2 -mt-16"
            :src="require(`@/assets/images/illustration.svg`)"
          />
          <div
            class="-intro-x text-white font-medium text-4xl leading-tight mt-10"
          >
            쉽고 간단하게 Vuelog를 시작해보세요 <br />
          </div>
        </div>
      </div>
      <!-- END: Login Info -->
      <!-- BEGIN: Login Form -->
      <div class="h-screen xl:h-auto flex py-5 xl:py-0 my-10 xl:my-0">
        <div
          class="my-auto mx-auto xl:ml-20 bg-white xl:bg-transparent px-5 sm:px-8 py-8 xl:p-0 rounded-md shadow-md xl:shadow-none w-full sm:w-3/4 lg:w-2/4 xl:w-auto"
        >
          <h2
            class="intro-x font-bold text-2xl xl:text-3xl text-center xl:text-left"
          >
            로그인
          </h2>
          <div class="intro-x mt-2 text-gray-500 xl:hidden text-center">
            A few more clicks to sign in to your account. Manage all your
            e-commerce accounts in one place
          </div>
          <div class="intro-x mt-8">
            <input
              type="text"
              class="intro-x login__input input input--lg border border-gray-300 block"
              placeholder="이메일"
              v-model="mDto.email"
            />
            <input
              type="password"
              class="intro-x login__input input input--lg border border-gray-300 block mt-4"
              placeholder="패스워드"
              v-model="mDto.password"
            />
          </div>
          <div
            class="intro-x flex text-gray-700 dark:text-gray-600 text-xs sm:text-sm mt-4"
          >
            <div class="flex items-center mr-auto"></div>
            <a href="javascript:;">비밀번호를 잊어버리셨나요?</a>
          </div>
          <div
            class="intro-x rounded-md flex items-center px-5 py-4 mb-2 bg-theme-6 text-white"
            style="margin-top: 20px"
            v-if="loginCheck === false"
          >
            <AlertOctagonIcon class="w-6 h-6 mr-2" /> 로그인 정보가 일치하지
            않습니다
            <xIcon
              class="intro-x w-4 h-4 ml-auto"
              v-on:click="alertClose"
              style="cursor: pointer"
            />
          </div>
          <div class="intro-x mt-5 xl:mt-8 text-center xl:text-left">
            <button
              class="button button--lg w-full xl:w-32 text-white bg-theme-1 xl:mr-3 align-top"
              @click="login()"
            >
              로그인
            </button>
            <button
              class="button button--lg w-full xl:w-32 text-gray-700 border border-gray-300 dark:border-dark-5 dark:text-gray-300 mt-3 xl:mt-0 align-top"
              v-on:click="joinFn"
            >
              가입하기
            </button>
          </div>
          <div
            class="intro-x mt-10 xl:mt-24 text-gray-700 dark:text-gray-600 text-center xl:text-left"
          ></div>
        </div>
      </div>
      <!-- END: Login Form -->
    </div>
  </div>
</template>

<script>
import { defineComponent, onMounted } from "vue";
import DarkModeSwitcher from "@/components/dark-mode-switcher/Main.vue";
import axiosApi from "../../api/index";
import index from "@/store/login-menu/index";

export default defineComponent({
  components: {
    DarkModeSwitcher,
  },
  data() {
    return {
      loginCheck: Boolean,
      mDto: {
        email: "",
        password: "",
      },
    };
  },

  methods: {
    mainfn: function () {
      this.$router.push("/");
    },

    alertClose: function () {
      this.loginCheck = true;
    },

    async login() {
      console.log(this.$route.params.routeinfo);
      if (this.mDto.email != null && this.mDto.password != null) {
        await axiosApi
          .post("/login/", this.mDto)
          .then((res) => {
            if (res.data === "success") {
              axiosApi
                .post("/login/nickname", this.mDto)
                .then((response) => {
                  this.state.nickname = response.data;
                })
                .catch((error) => {
                  console.log(error);
                });
              this.state.isLogin = true;
              this.state.email = this.mDto.email;

              if (
                typeof this.$route.params.routeinfo === "undefined" ||
                this.$route.params.routeinfo === "/login" ||
                this.$route.params.routeinfo === "/register" ||
                this.$route.params.routeinfo === null
              ) {
                this.$router.push({ path: "/" });
              } else {
                this.$router.push({ path: this.$route.params.routeinfo });
              }
            } else if (res.data === "fail") {
              this.loginCheck = false;
            }
          })
          .catch((err) => {
            console.log(err);
          });
      } else {
        this.loginCheck = false;
      }
    },
    joinFn() {
      this.$router.push("/register");
    },
  },
  setup() {
    onMounted(() => {
      cash("body")
        .removeClass("app")
        .removeClass("error-page")
        .addClass("login");
    });
    const { state } = index;
    return { state };
  },
});
</script>
