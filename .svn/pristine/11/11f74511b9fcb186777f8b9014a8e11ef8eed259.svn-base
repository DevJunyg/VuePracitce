<template>
  <div class="postcreate">
    <form role="form">
      <input
        type="text"
        class="form-control"
        placeholder="게시물 제목"
        v-model="postDto.title"
      /><br /><br />
      <!-- <input
        type="text"
        class="form-control"
        placeholder="게시물 내용"
        v-model="postDto.content"
      /> -->

      <ckeditor :editor="editor" v-model="postDto.content" />

      <br /><br /><br />
      <input
        type="text"
        class="form-control"
        placeholder="이메일"
        v-model="postDto.email"
      />
      <br /><br /><br />
      <input type="number" class="form-control" v-model="postDto.boardtype" />
      <input type="number" class="form-control" v-model="postDto.storage" />
    </form>
    <button v-on:click="addPost">글 등록</button>

    <button @click="emptyEditor">글 리셋</button>

    <h2>Editor data</h2>
    <code>{{ postDto.content }}</code>
  </div>
</template>

<script>
import ClassicEditor from "@ckeditor/ckeditor5-build-classic";
import CKEditor from "@ckeditor/ckeditor5-vue";
import { registerPost } from "../api/index.js";

import "@ckeditor/ckeditor5-build-classic/build/translations/ko";

export default {
  name: "postcreate",
  components: {
    ckeditor: CKEditor.component
  },
  data: () => {
    return {
      postDto: {},
      editor: ClassicEditor
    };
  },

  methods: {
    // 초기화 함수를 정의
    addPost: function(event) {
      event.preventDefault();
      let vm = this;
      registerPost(vm.postDto) // RESTful API에 POST 콜
        .then(() => {
          this.$router.replace(this.$route.query.redirect || "/posts"); // 게시글 등록 성공시 라우팅 위치
        })
        .catch(error => {
          console.log(error);
        });
    },
    emptyEditor() {
      this.postDto.content = "";
    }
  }
};
</script>

<!-- Add "scoped" attribute to limit CSS to this component only -->
<style>
h1,
h2 {
  font-weight: normal;
}

ul {
  list-style-type: none;
  padding: 0;
}

li {
  display: inline-block;
  margin: 0 10px;
}

a {
  color: #35495e;
}
</style>
