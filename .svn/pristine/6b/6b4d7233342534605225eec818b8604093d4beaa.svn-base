<template>
  <div class="postcreate">
    <form role="form">
      <input
        type="text"
        class="form-control"
        placeholder="게시물 제목"
        v-model="postDto.title"
      /><br /><br />
      <!-- <input
        type="text"
        class="form-control"
        placeholder="게시물 내용"
        v-model="postDto.content"
      /> -->

      <ckeditor
        :editor="editor"
        v-model="postDto.content"
        :config="editorConfig"
      ></ckeditor>

      <br /><br /><br />
      <input
        type="text"
        class="form-control"
        placeholder="이메일"
        v-model="postDto.email"
      />
      <br /><br /><br />
      <input type="number" class="form-control" v-model="postDto.boardtype" />
      <input type="number" class="form-control" v-model="postDto.storage" />
    </form>
    <button v-on:click="addPost">글 등록</button>

    <button @click="emptyEditor">글 리셋</button>

    <h2>Editor data</h2>
    <code>{{ postDto.content }}</code>
  </div>
</template>

<script>
// import ClassicEditor from "@ckeditor/ckeditor5-build-classic";
import ClassicEditor from "@ckeditor/ckeditor5-editor-classic/src/classiceditor";

import { registerPost } from "../api/index.js";

import "@ckeditor/ckeditor5-build-classic/build/translations/ko";

import EssentialsPlugin from "@ckeditor/ckeditor5-essentials/src/essentials";
import BoldPlugin from "@ckeditor/ckeditor5-basic-styles/src/bold";
import ItalicPlugin from "@ckeditor/ckeditor5-basic-styles/src/italic";
import LinkPlugin from "@ckeditor/ckeditor5-link/src/link";
import ParagraphPlugin from "@ckeditor/ckeditor5-paragraph/src/paragraph";

// import Base64UploadAdapter from "@ckeditor/ckeditor5-upload/src/adapters/base64uploadadapter";

import SimpleUploadAdapter from "@ckeditor/ckeditor5-upload/src/adapters/simpleuploadadapter";

import Image from "@ckeditor/ckeditor5-image/src/image.js";
import ImageCaption from "@ckeditor/ckeditor5-image/src/imagecaption.js";
import ImageInsert from "@ckeditor/ckeditor5-image/src/imageinsert.js";
import ImageResize from "@ckeditor/ckeditor5-image/src/imageresize.js";
import ImageStyle from "@ckeditor/ckeditor5-image/src/imagestyle.js";
import ImageToolbar from "@ckeditor/ckeditor5-image/src/imagetoolbar.js";
import ImageUpload from "@ckeditor/ckeditor5-image/src/imageupload.js";

import FontColor from "@ckeditor/ckeditor5-font/src/fontcolor.js";
import FontFamily from "@ckeditor/ckeditor5-font/src/fontfamily.js";
import FontSize from "@ckeditor/ckeditor5-font/src/fontsize.js";
import Heading from "@ckeditor/ckeditor5-heading/src/heading.js";

export default {
  name: "postcreate",

  data() {
    return {
      postDto: {},
      editor: ClassicEditor,

      editorConfig: {
        language: "ko",
        plugins: [
          EssentialsPlugin,
          BoldPlugin,
          ItalicPlugin,
          LinkPlugin,
          ParagraphPlugin,
          SimpleUploadAdapter,
          Image,
          ImageCaption,
          ImageInsert,
          ImageResize,
          ImageStyle,
          ImageToolbar,
          ImageUpload,
          FontColor,
          FontFamily,
          FontSize,
          Heading
        ],

        toolbar: {
          items: [
            "bold",
            "italic",
            "link",
            "undo",
            "redo",
            "imageinsert",
            "imageresize",
            "fontcolor",
            "fontfamily",
            "fontsize",
            "heading"
          ]
        },
        simpleUpload: {
          // The URL that the images are uploaded to.
          uploadUrl: "http://localhost:8082/api/uploadAjaxAction",

          // Enable the XMLHttpRequest.withCredentials property.
          withCredentials: true,

          // Headers sent along with the XMLHttpRequest to the upload server.
          headers: {
            "X-CSRF-TOKEN": "CSRF-Token",
            Authorization: "Bearer <JSON Web Token>"
          },
          urls: {
            default: "https://example.com/images/foo.jpg",
            "800": "https://example.com/images/foo-800.jpg",
            "1024": "https://example.com/images/foo-1024.jpg",
            "1920": "https://example.com/images/foo-1920.jpg"
          }
        }
      }
    };
  },

  methods: {
    // 초기화 함수를 정의
    addPost: function(event) {
      event.preventDefault();
      let vm = this;
      registerPost(vm.postDto) // RESTful API에 POST 콜
        .then(() => {
          this.$router.replace(this.$route.query.redirect || "/posts"); // 게시글 등록 성공시 라우팅 위치
        })
        .catch(error => {
          console.log(error);
        });
    },
    emptyEditor() {
      this.postDto.content = "";
    }
  }
};
</script>

<!-- Add "scoped" attribute to limit CSS to this component only -->
<style>
h1,
h2 {
  font-weight: normal;
}

ul {
  list-style-type: none;
  padding: 0;
}

li {
  display: inline-block;
  margin: 0 10px;
}

a {
  color: #35495e;
}
</style>
